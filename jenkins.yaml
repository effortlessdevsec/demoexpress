pipeline:
  agent: any
  stages:
    - stage: Checkout
      steps:
        - git: 'https://github.com/effortlessdevsec/demoexpress.git'
    - stage: Build
      steps:
        - echo: 'Building and installing all dependencies'
        - sh: 'npm install'
    - stage: SAST
      parallel:
        - stage: SCA
          steps:
            - echo: 'Running SCA scan'
            - sh: 'ls'
            - sh: 'snyk test "$(pwd)" --json-file-output=synkscan.json'
        - stage: SCS
          steps:
            - echo: 'Running Semgrep scan'
            - sh: 'semgrep --config "p/nodejsscan" "$(pwd)" --json -o semgrep.json'
  post:
    always:
      - echo: 'Hello, success pipeline'
      - sh: |
          curl --location http://localhost:8080/api/v2/reimport-scan/ \
               --header "Authorization: Token ${DEFECT_DOJO}" \
               --form 'engagement_name="SAST"' \
               --form 'verified="true"' \
               --form 'active="true"' \
               --form 'lead="1"' \
               --form 'tags="test"' \
               --form 'scan_type="Snyk Scan"' \
               --form 'minimum_severity="Info"' \
               --form 'close_old_findings="false"' \
               --form "file=@$PWD/synkscan.json" \
               --form 'product_name="NINZASWORKOUT"' \
               --form 'test_title="SCA"'
      - sh: |
          curl --location http://localhost:8080/api/v2/reimport-scan/ \
               --header "Authorization: Token ${DEFECT_DOJO}" \
               --form 'engagement_name="SAST"' \
               --form 'verified="true"' \
               --form 'active="true"' \
               --form 'lead="1"' \
               --form 'tags="test"' \
               --form 'scan_type="Semgrep JSON Report"' \
               --form 'minimum_severity="Info"' \
               --form 'close_old_findings="false"' \
               --form "file=@$PWD/semgrep.json" \
               --form 'product_name="NINZASWORKOUT"' \
               --form 'test_title="code scan"'
    failure:
      - echo: 'Error in pipeline'
